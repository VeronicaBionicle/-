#asm
.equ __w1_port = 0x12   //portD
.equ __w1_bit = 1       //portD bit 1
.equ __lcd_port = 0x18  //portB
#endasm

#include <lcd.h>
#include <ds1820.h>
#include <delay.h>
#include <math.h>
#include <stdio.h>

char lcd_buffer[33];

#define MAX_DEVICES 8

unsigned char rom_code[MAX_DEVICES][9]; //спросить насчет массива

void main(void)
{
unsigned char i, j, devices;
int temp;

lcd_init(16);
lcd_putsf("CodeVisionAVR\n1 Wire Bus Demo");
delay_ms(2000);
lcd_clear();

devices = w1_search(0xf0, rom_code);
sprintf(lcd_buffer, "%u DS1820\nDevice detected", devices);
lcd_puts(lcd_buffer);
delay_ms(2000);

if (devices){
for(i=0;i<devices;i++){
sprintf(lcd_buffer, "Device #%u ROM\nCode is:", i+1);
lcd_clear();
lcd_puts(lcd_buffer);
delay_ms(2000);
lcd_clear();
for(j=0; j<8;j++){
sprintf(lcd_buffer, "%02X ", rom_code[i][j]);
lcd_puts(lcd_buffer);
if (j==3) lcd_gotoxy(0,1);
};      
delay_ms(5000);
};
}
else while(1);
while (1)
    {
     for (i=0;i<devices;){
        temp=ds1820_temperature_10(&rom_code[i][0]);
        sprintf(lcd_buffer, "t%u=i.%u\xdfC", ++i, temp/10, abs(temp%10));    // abs не работает, спросить
        lcd_clear();
        lcd_puts(lcd_buffer);
        delay_ms(800);
    };
    }
}
